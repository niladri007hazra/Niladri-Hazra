<!doctype html>
<html
  class="no-js{% if request.design_mode %} shopify-design-mode{% endif %}"
  lang="{{ request.locale.iso_code }}"
>
  <head>
    {{ 'base.css' | asset_url | stylesheet_tag }}
    {{ 'custom-style.css' | asset_url | stylesheet_tag }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"/>


    {%- if settings.favicon != blank -%}
      <link
        rel="icon"
        type="image/png"
        href="{{ settings.favicon | image_url: width: 32, height: 32 }}"
      >
    {%- endif -%}

    {% comment %} This a way to wait for main content to load when navigating to a new page so that the view transitions can work consistently {% endcomment %}
    <link
      rel="expect"
      href="#MainContent"
      blocking="render"
      id="view-transition-render-blocker"
    >

    {%- render 'meta-tags' -%}
    {%- render 'fonts' -%}
    {%- render 'scripts' -%}
    {%- render 'theme-styles-variables' -%}
    {%- render 'color-schemes' -%}

    {% if request.design_mode %}
      {%- render 'theme-editor' -%}
    {% endif %}

    {{ content_for_header }}
  </head>

  <body class="page-width-{{ settings.page_width }} card-hover-effect-{{ settings.card_hover_effect }}">
    {% render 'skip-to-content-link', href: '#MainContent', text: 'accessibility.skip_to_text' %}
    <div id="header-group">
      {% sections 'header-group' %}
    </div>

    <main
      id="MainContent"
      class="content-for-layout"
      role="main"
      data-page-transition-enabled="{{ settings.page_transition_enabled }}"
      data-product-transition="{{ settings.transition_to_main_product }}"
      data-template="{{ template }}"
    >
      {{ content_for_layout }}
    </main>

    {% sections 'footer-group' %}

    {% render 'search-modal' %}

    {% # theme-check-disable ParserBlockingScript %}
    <script src="{{ 'critical.js' | asset_url }}"></script>
    {% # theme-check-enable ParserBlockingScript %}

    {% if settings.quick_add or settings.mobile_quick_add %}
      {% render 'quick-add-modal' %}
    {% endif %}
    
{% comment %}
  
{% layout none %}
    <div id="QuickViewModal" class="quick-view-modal" style="display:none;">
      <div class="quick-view-content">
        <button class="close-quick-view">×</button>
        <div id="QuickViewContent"></div>
      </div>
    </div>
    
    <style>
      .quick-view-modal {
        position: fixed; 
        top: 0; 
        left: 0; 
        right: 0; 
        bottom: 0;
        background: rgba(0,0,0,0.5); 
        z-index: 1000;
        display: flex; 
        justify-content: center; 
        align-items: center;
        padding: 50px 100px;
      }
      .quick-view-content {
        background: #fff; 
        width: 90%;
        height: -webkit-fill-available;
        max-width: 1000px; 
        display: flex; 
        gap: 2rem;
        padding: 2rem; 
        overflow: auto; 
        flex-direction: column;
        align-items: flex-end;
      }
      .quick-view-content .close-quick-view {
          width: 40px;
      }
      .quick-view-images { flex: 1; }
      .quick-view-info { flex: 1; }
      #QuickViewContent .shopify-section-group-header-group, .section-resource-list, .shopify-section-group-footer-group {
          display: none;
      }
    </style>

    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
    <script>
    document.querySelectorAll('.quick-view-btn').forEach(btn => {
      btn.addEventListener('click', function() {
        const handle = this.dataset.productHandle;
        fetch(`/products/${handle}?view=quickView`)
          .then(res => res.text())
          .then(html => {
            document.getElementById('QuickViewContent').innerHTML = html;
            document.getElementById('QuickViewModal').style.display = 'flex';
          });
      });
    });
    
    document.addEventListener('click', function(e) {
      if (e.target.classList.contains('close-quick-view')) {
        document.getElementById('QuickViewModal').style.display = 'none';
      }
    });
    </script>

{% endcomment %}
{% style %}
.quick-view-modal {
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  background: rgba(0,0,0,0.5);
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

.quick-view-wrapper {
  background: white;
  padding: 20px;
  display: flex;
  gap: 20px;
  max-width: 700px;
  width: 100%;
}

.quick-view-close {
  position: absolute;
  top: 10px;
  right: 20px;
  font-size: 24px;
  background: none;
  border: none;
  cursor: pointer;
}

.variant-btn {
  margin: 5px;
  padding: 8px 16px;
  border: 1px solid #000;
  background: #fff;
  cursor: pointer;
}

.variant-btn.active {
  background: #000;
  color: #fff;
}

.variant-group label {
  display: block;
  margin-bottom: 4px;
  font-weight: bold;
}

.add-to-cart-btn {
  width: 100%;
  background: #000;
  color: #fff;
  padding: 12px;
  border: none;
  font-size: 16px;
  margin-top: 10px;
  cursor: pointer;
}

{% endstyle %}
<div id="QuickViewModal" style="display: none;" class="quick-view-modal">
  <div class="quick-view-wrapper">
    <button class="quick-view-close">×</button>
    <div class="quick-view-image">
      <img id="QuickViewImage" src="" alt="" />
    </div>
    <div class="quick-view-details">
      <h3 id="QuickViewTitle">Product Title</h3>
      <p id="QuickViewPrice">0.00€</p>
      <p id="QuickViewDescription">Product description</p>

      <form id="QuickViewForm">
        <div class="variant-section" id="VariantOptionsContainer"></div>
        <input type="hidden" id="QuickViewVariantId" name="id" />
        <button type="submit" class="add-to-cart-btn">ADD TO CART →</button>
        <p id="QuickViewMessage" style="display: none; color: green; margin-top: 10px;">✔ Product added to cart</p>
      </form>
    </div>
  </div>
</div>
<script>
document.addEventListener("DOMContentLoaded", function () {
  const modal = document.getElementById("QuickViewModal");
  const form = document.getElementById("QuickViewForm");
  const variantInput = document.getElementById("QuickViewVariantId");
  const message = document.getElementById("QuickViewMessage");

  document.querySelectorAll(".quick-view-btn").forEach(button => {
    button.addEventListener("click", () => {
      const handle = button.dataset.handle;
      fetch(`/products/${handle}?view=product-quick-view`)
        .then(res => res.text())
        .then(html => {
          const temp = document.createElement("div");
          temp.innerHTML = html;
          const product = JSON.parse(temp.querySelector("[data-product-json]").textContent);

          // Fill in content
          document.getElementById("QuickViewImage").src = product.featured_image;
          document.getElementById("QuickViewTitle").textContent = product.title;
          document.getElementById("QuickViewDescription").textContent = product.description;
          document.getElementById("QuickViewPrice").textContent = (product.variants[0].price / 100).toFixed(2) + "€";

          // Build variant options (styled like buttons/selects)
          const optionsContainer = document.getElementById("VariantOptionsContainer");
          optionsContainer.innerHTML = "";
          product.options.forEach((optionName, index) => {
            const values = [...new Set(product.variants.map(v => v[`option${index + 1}`]))];
            const group = document.createElement("div");
            group.classList.add("variant-group");

            const label = document.createElement("label");
            label.textContent = optionName;
            group.appendChild(label);

            if (optionName.toLowerCase().includes("size")) {
              const select = document.createElement("select");
              select.innerHTML = `<option value="">Choose your ${optionName.toLowerCase()}</option>` +
                values.map(v => `<option value="${v}">${v}</option>`).join("");
              select.dataset.index = index;
              group.appendChild(select);
            } else {
              values.forEach(value => {
                const btn = document.createElement("button");
                btn.type = "button";
                btn.textContent = value;
                btn.dataset.index = index;
                btn.dataset.value = value;
                btn.classList.add("variant-btn");
                group.appendChild(btn);
              });
            }
            optionsContainer.appendChild(group);
          });

          // Set default variant ID
          variantInput.value = product.variants[0].id;

          // Handle variant change
          let selectedOptions = Array(product.options.length).fill(null);

          optionsContainer.addEventListener("click", e => {
            if (e.target.classList.contains("variant-btn")) {
              const index = parseInt(e.target.dataset.index);
              selectedOptions[index] = e.target.dataset.value;

              // Toggle active state
              e.target.parentElement.querySelectorAll("button").forEach(b => b.classList.remove("active"));
              e.target.classList.add("active");

              updateVariantId();
            }
          });

          optionsContainer.querySelectorAll("select").forEach(select => {
            select.addEventListener("change", () => {
              const index = parseInt(select.dataset.index);
              selectedOptions[index] = select.value;
              updateVariantId();
            });
          });

          function updateVariantId() {
            const matched = product.variants.find(v =>
              selectedOptions.every((val, i) => val === v[`option${i + 1}`])
            );
            if (matched) {
              variantInput.value = matched.id;
              document.getElementById("QuickViewPrice").textContent = (matched.price / 100).toFixed(2) + "€";
            }
          }

          modal.style.display = "block";
        });
    });
  });

  form.addEventListener("submit", function (e) {
    e.preventDefault();
    const variantId = variantInput.value;
    if (!variantId) return alert("Please select options.");

    fetch("/cart/add.js", {
      method: "POST",
      headers: { "Content-Type": "application/json", Accept: "application/json" },
      body: JSON.stringify({ id: variantId, quantity: 1 }),
    })
      .then(res => res.json())
      .then(() => {
        message.style.display = "block";
        setTimeout(() => message.style.display = "none", 2000);
      })
      .catch(() => alert("Error adding to cart."));
  });

  document.querySelector(".quick-view-close").addEventListener("click", () => {
    modal.style.display = "none";
  });
});
</script>


  </body>
</html>
