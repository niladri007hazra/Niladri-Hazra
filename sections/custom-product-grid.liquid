{% style %}
  #modal-container {
      position: fixed; /* Change to fixed to cover the viewport */
      top: 0; /* Align to the top */
      left: 0; /* Align to the left */
      width: 100vw; /* Full width of the viewport */
      height: 100vh; /* Full height of the viewport */
      background-color: rgba(0, 0, 0, 0.5); /* Optional: semi-transparent background */ */
      z-index: 1000; /* Ensure it appears above other content */ */
      display: none;
  }
  .collection-add-to-cart {
    position: absolute;
    height: 40px;
    width: 40px;
    background: #1d438a;
    border-radius: 50%;
    top: 60%;
    right: 18px;
    z-index: 99;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
  }

  .collection-add-to-cart:hover {
    background: #778eb8;
  }
  .material-symbols-outlined {
    color: white;
    font-variation-settings:
    'FILL' 0,Add commentMore actions
    'wght' 400,
    'GRAD' 0,
    'opsz' 24
  }
{% endstyle %}

{% stylesheet %}
    .custom-product-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 20px;
      justify-content: center;
      max-width: 1000px;
      margin: 50px auto;
    }

    .custom-product-card {
      position: relative;
      overflow: hidden;
      aspect-ratio: 1 / 1;
    }

    .custom-product-card img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      display: block;
    }

   .product-button {
    position: absolute;
    width: 10px;
    height: 10px;
    padding: 8px 8px;
    background-color: #fff;
    border: none;
    border-radius: 50px;
    cursor: pointer;
    transition: box-shadow 0.3s ease, transform 0.3s ease;
  }

  .product-button:hover {
    width: 20px;
    height: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);
    transform: scale(1.05);
  }
{% endstylesheet %}

<div class="custom-product-grid">
  {% for block in section.blocks %}
    {% assign product = all_products[block.settings.product] %}
    {% if product %}
      <div class="custom-product-card">
        <img
          src="{{ product.featured_image | image_url: width: 300 }}"
          alt="{{ product.title }}"
          style="width: 100%; margin: 10px 0;"
        >
        <button
          class="product-button quick-view-btn"
          style="
            top: {{ block.settings.button_top }}px;
            left: {{ block.settings.button_left }}px;
            right: {{ block.settings.button_right }}px;
            bottom: {{ block.settings.button_bottom }}px;
          "
          data-product-handle="{{ product.handle }}"
        ></button>
      </div>
    {% endif %}
  {% endfor %}
</div>


<script>
  async function getNewVariant(handle) {
    let selectedColorOption = document.querySelector('.color-option.selected')
    let selectedSizeOption = document.querySelector('.size-option.selected')
    const response = await fetch(
      `/products/${handle}?section_id=product-popup&option_values=${selectedColorOption?.dataset?.id || ''},${selectedSizeOption?.dataset?.id || ''}`
    );
    const html = await response.text();
    const parser = new DOMParser();
    const doc = parser.parseFromString(html, 'text/html');
    const selectedVariantJson = doc.querySelector('script[data-selected-variant]').textContent;
    return JSON.parse(selectedVariantJson)
  }
  function changeQuantity(delta) {
      const currentQuantity = Number(document.getElementById('quantity').innerText);
      const newQuantity = Math.max(0, currentQuantity + delta);
      document.getElementById('quantity').textContent = newQuantity;
  }
  function closeModal() {
    let item = document.querySelector('.product-popup-modal-overlay')
    item.addEventListener('click', function(event) {
      if (event.target === this) {
        item.remove()
      }
    })
  }
  window.showModal = async function (handle) {
    let response = await fetch(`/products/${handle}?section_id=product-popup`);
    let html = await response.text();
    document.body.insertAdjacentHTML('beforeend', html); // Insert the fetched HTML into the body
    createListeners();
    closeModal()
  };
  function createListeners() {
    window.changeImage = function (src) {
      const mainImage = document.querySelector('.product-popup-main-image img');
      mainImage.src = src;
    };
    window.selectColor = function (element, color) {
      document.querySelectorAll('.color-option').forEach((el) => {
        if (el !== element) {
          el.classList.remove('selected');
        }
      });
      element.classList.add('selected');
    };
    window.selectSize = function (element, color) {
      document.querySelectorAll('.size-option').forEach((el) => {
        if (el !== element) {
          el.classList.remove('selected');
        }
      });
      element.classList.add('selected');
    };
    window.addToCart = async function (handle) {
      const variant = await getNewVariant(handle);
      const quantity = Number(document.getElementById('quantity').textContent) || 1
      let formData = {
       'items': [{
        'id': variant.id,
        'quantity': quantity
        }]
      };
      fetch(window.Shopify.routes.root + 'cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(formData)
      })
      .then(response => {
          window.location.href = '/cart'
        
        return response.json();
      })
      .catch((error) => {
        console.error('Error:', error);
      });
    };
  }
</script>

{% schema %}
{
  "name": "Custom Product Grid",
  "settings": [],
  "blocks": [
    {
      "type": "product_block",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Select Product"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button Label",
          "default": "Click Me"
        },
        {
          "type": "number",
          "id": "button_top",
          "label": "Top (px)",
          "default": 10
        },
        {
          "type": "number",
          "id": "button_left",
          "label": "Left (px)",
          "default": 0
        },
        {
          "type": "number",
          "id": "button_right",
          "label": "Right (px)",
          "default": 0
        },
        {
          "type": "number",
          "id": "button_bottom",
          "label": "Bottom (px)",
          "default": 0
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Custom Product Grid",
      "category": "Custom"
    }
  ]
}
{% endschema %}
